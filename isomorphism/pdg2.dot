digraph _Z13insertionSortPii{

"  %arr.addr = alloca i32*, align 8";
"  %n.addr = alloca i32, align 4";
"  %i = alloca i32, align 4";
"  %key = alloca i32, align 4";
"  %j = alloca i32, align 4";
"i32* %arr" -> "  %arr.addr = alloca i32*, align 8";
"i32 %n" -> "  %n.addr = alloca i32, align 4";
"i32 1" -> "  %i = alloca i32, align 4";
"  br label %for.cond" -> "  %0 = load i32* %i, align 4";
"  %i = alloca i32, align 4" -> "  %0 = load i32* %i, align 4";
"  %n.addr = alloca i32, align 4" -> "  %1 = load i32* %n.addr, align 4";
"  %0 = load i32* %i, align 4" -> "  %cmp = icmp slt i32 %0, %1";
"  %1 = load i32* %n.addr, align 4" -> "  %cmp = icmp slt i32 %0, %1";
"  %cmp = icmp slt i32 %0, %1" -> "  %2 = load i32* %i, align 4";
"  %cmp = icmp slt i32 %0, %1" -> "i32 0";
"  %i = alloca i32, align 4" -> "  %2 = load i32* %i, align 4";
"  %2 = load i32* %i, align 4" -> "  %idxprom = sext i32 %2 to i64";
"  %arr.addr = alloca i32*, align 8" -> "  %3 = load i32** %arr.addr, align 8";
"  %3 = load i32** %arr.addr, align 8" -> "  %arrayidx = getelementptr inbounds i32* %3, i64 %idxprom";
"  %arrayidx = getelementptr inbounds i32* %3, i64 %idxprom" -> "  %4 = load i32* %arrayidx, align 4";
"  %4 = load i32* %arrayidx, align 4" -> "  %key = alloca i32, align 4";
"  %i = alloca i32, align 4" -> "  %5 = load i32* %i, align 4";
"  %5 = load i32* %i, align 4" -> "  %sub = sub nsw i32 %5, 1";
"i32 1" -> "  %sub = sub nsw i32 %5, 1";
"  %sub = sub nsw i32 %5, 1" -> "  %j = alloca i32, align 4";
"  br label %while.cond" -> "  %6 = load i32* %j, align 4";
"  %j = alloca i32, align 4" -> "  %6 = load i32* %j, align 4";
"  %6 = load i32* %j, align 4" -> "  %cmp1 = icmp sge i32 %6, 0";
"i32 0" -> "  %cmp1 = icmp sge i32 %6, 0";
"  %cmp1 = icmp sge i32 %6, 0" -> "  %7 = load i32* %j, align 4";
"  %cmp1 = icmp sge i32 %6, 0" -> "  %11 = phi i1 [ false, %while.cond ], [ %cmp4, %land.rhs ]";
"  %j = alloca i32, align 4" -> "  %7 = load i32* %j, align 4";
"  %7 = load i32* %j, align 4" -> "  %idxprom2 = sext i32 %7 to i64";
"  %arr.addr = alloca i32*, align 8" -> "  %8 = load i32** %arr.addr, align 8";
"  %8 = load i32** %arr.addr, align 8" -> "  %arrayidx3 = getelementptr inbounds i32* %8, i64 %idxprom2";
"  %arrayidx3 = getelementptr inbounds i32* %8, i64 %idxprom2" -> "  %9 = load i32* %arrayidx3, align 4";
"  %key = alloca i32, align 4" -> "  %10 = load i32* %key, align 4";
"  %9 = load i32* %arrayidx3, align 4" -> "  %cmp4 = icmp sgt i32 %9, %10";
"  %10 = load i32* %key, align 4" -> "  %cmp4 = icmp sgt i32 %9, %10";
"  br label %land.end" -> "  %11 = phi i1 [ false, %while.cond ], [ %cmp4, %land.rhs ]";
"  %11 = phi i1 [ false, %while.cond ], [ %cmp4, %land.rhs ]" -> "  %12 = load i32* %j, align 4";
"  %11 = phi i1 [ false, %while.cond ], [ %cmp4, %land.rhs ]" -> "  %18 = load i32* %key, align 4";
"  %j = alloca i32, align 4" -> "  %12 = load i32* %j, align 4";
"  %12 = load i32* %j, align 4" -> "  %idxprom5 = sext i32 %12 to i64";
"  %arr.addr = alloca i32*, align 8" -> "  %13 = load i32** %arr.addr, align 8";
"  %13 = load i32** %arr.addr, align 8" -> "  %arrayidx6 = getelementptr inbounds i32* %13, i64 %idxprom5";
"  %arrayidx6 = getelementptr inbounds i32* %13, i64 %idxprom5" -> "  %14 = load i32* %arrayidx6, align 4";
"  %j = alloca i32, align 4" -> "  %15 = load i32* %j, align 4";
"  %15 = load i32* %j, align 4" -> "  %add = add nsw i32 %15, 1";
"i32 1" -> "  %add = add nsw i32 %15, 1";
"  %add = add nsw i32 %15, 1" -> "  %idxprom7 = sext i32 %add to i64";
"  %arr.addr = alloca i32*, align 8" -> "  %16 = load i32** %arr.addr, align 8";
"  %16 = load i32** %arr.addr, align 8" -> "  %arrayidx8 = getelementptr inbounds i32* %16, i64 %idxprom7";
"  %14 = load i32* %arrayidx6, align 4" -> "  %arrayidx8 = getelementptr inbounds i32* %16, i64 %idxprom7";
"  %j = alloca i32, align 4" -> "  %17 = load i32* %j, align 4";
"  %17 = load i32* %j, align 4" -> "  %sub9 = sub nsw i32 %17, 1";
"i32 1" -> "  %sub9 = sub nsw i32 %17, 1";
"  %sub9 = sub nsw i32 %17, 1" -> "  %j = alloca i32, align 4";
"  br label %while.cond" -> "  %6 = load i32* %j, align 4";
"  %key = alloca i32, align 4" -> "  %18 = load i32* %key, align 4";
"  %j = alloca i32, align 4" -> "  %19 = load i32* %j, align 4";
"  %19 = load i32* %j, align 4" -> "  %add10 = add nsw i32 %19, 1";
"i32 1" -> "  %add10 = add nsw i32 %19, 1";
"  %add10 = add nsw i32 %19, 1" -> "  %idxprom11 = sext i32 %add10 to i64";
"  %arr.addr = alloca i32*, align 8" -> "  %20 = load i32** %arr.addr, align 8";
"  %20 = load i32** %arr.addr, align 8" -> "  %arrayidx12 = getelementptr inbounds i32* %20, i64 %idxprom11";
"  %18 = load i32* %key, align 4" -> "  %arrayidx12 = getelementptr inbounds i32* %20, i64 %idxprom11";
"  br label %for.inc" -> "  %21 = load i32* %i, align 4";
"  %i = alloca i32, align 4" -> "  %21 = load i32* %i, align 4";
"  %21 = load i32* %i, align 4" -> "  %inc = add nsw i32 %21, 1";
"i32 1" -> "  %inc = add nsw i32 %21, 1";
"  %inc = add nsw i32 %21, 1" -> "  %i = alloca i32, align 4";
"  br label %for.cond" -> "  %0 = load i32* %i, align 4";
"i32 0" -> "  %i = alloca i32, align 4";
"  br label %for.cond13" -> "  %22 = load i32* %i, align 4";
"  %i = alloca i32, align 4" -> "  %22 = load i32* %i, align 4";
"  %n.addr = alloca i32, align 4" -> "  %23 = load i32* %n.addr, align 4";
"  %22 = load i32* %i, align 4" -> "  %cmp14 = icmp slt i32 %22, %23";
"  %23 = load i32* %n.addr, align 4" -> "  %cmp14 = icmp slt i32 %22, %23";
"  %cmp14 = icmp slt i32 %22, %23" -> "  %24 = load i32* %i, align 4";
"  %cmp14 = icmp slt i32 %22, %23" -> "  ret void";
"  %i = alloca i32, align 4" -> "  %24 = load i32* %i, align 4";
"  %24 = load i32* %i, align 4" -> "  %idxprom16 = sext i32 %24 to i64";
"  %arr.addr = alloca i32*, align 8" -> "  %25 = load i32** %arr.addr, align 8";
"  %25 = load i32** %arr.addr, align 8" -> "  %arrayidx17 = getelementptr inbounds i32* %25, i64 %idxprom16";
"  %arrayidx17 = getelementptr inbounds i32* %25, i64 %idxprom16" -> "  %26 = load i32* %arrayidx17, align 4";
"  %26 = load i32* %arrayidx17, align 4" -> "  %add18 = add nsw i32 %26, 1";
"i32 1" -> "  %add18 = add nsw i32 %26, 1";
"@_ZSt4cout = external global %\"class.std::basic_ostream\"" -> "  %call = call %\"class.std::basic_ostream\"* @_ZNSolsEi(%\"class.std::basic_ostream\"* @_ZSt4cout, i32 %add18)";
"  %add18 = add nsw i32 %26, 1" -> "  %call = call %\"class.std::basic_ostream\"* @_ZNSolsEi(%\"class.std::basic_ostream\"* @_ZSt4cout, i32 %add18)";
"  %call = call %\"class.std::basic_ostream\"* @_ZNSolsEi(%\"class.std::basic_ostream\"* @_ZSt4cout, i32 %add18)" -> "  %call19 = call %\"class.std::basic_ostream\"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc(%\"class.std::basic_ostream\"* %call, i8* getelementptr inbounds ([2 x i8]* @.str, i32 0, i32 0))";
"i8* getelementptr inbounds ([2 x i8]* @.str, i32 0, i32 0)" -> "  %call19 = call %\"class.std::basic_ostream\"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc(%\"class.std::basic_ostream\"* %call, i8* getelementptr inbounds ([2 x i8]* @.str, i32 0, i32 0))";
"  br label %for.inc20" -> "  %27 = load i32* %i, align 4";
"  %i = alloca i32, align 4" -> "  %27 = load i32* %i, align 4";
"  %27 = load i32* %i, align 4" -> "  %inc21 = add nsw i32 %27, 1";
"i32 1" -> "  %inc21 = add nsw i32 %27, 1";
"  %inc21 = add nsw i32 %27, 1" -> "  %i = alloca i32, align 4";
"  br label %for.cond13" -> "  %22 = load i32* %i, align 4";
"printing a <null> value
" -> "  ret void";

}
